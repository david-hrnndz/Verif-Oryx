DIGEST 2b7075cb4a09e9a0e39b38f3fab3b52e
Flist_lemmas
R281:299 VST.floyd.proofauto <> <> lib
R317:326 stdpp.list <> <> lib
R344:349 Coq.ZArith.ZArith <> <> lib
R367:385 compcert.lib.Coqlib <> <> lib
R430:433 Coq.Init.Datatypes <> list ind
prf 443:454 <> listeqb_refl
R461:464 Coq.Init.Datatypes <> list ind
R466:466 Coq.Numbers.BinNums <> Z ind
binder 457:457 <> a:1
R491:493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R471:478 list_lemmas <> list_beq scheme
R480:480 Coq.Numbers.BinNums <> Z ind
R482:486 Coq.ZArith.BinInt Z eqb def
R488:488 list_lemmas <> a:1 var
R490:490 list_lemmas <> a:1 var
R494:497 Coq.Init.Datatypes <> true constr
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
prf 582:591 <> listeqb_eq
R595:601 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R614:616 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R608:611 Coq.Init.Datatypes <> list ind
R613:613 Coq.Numbers.BinNums <> Z ind
binder 602:602 <> a:2
R608:611 Coq.Init.Datatypes <> list ind
R613:613 Coq.Numbers.BinNums <> Z ind
binder 604:604 <> b:3
R644:648 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R637:639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R617:624 list_lemmas <> list_beq scheme
R626:626 Coq.Numbers.BinNums <> Z ind
R628:632 Coq.ZArith.BinInt Z eqb def
R634:634 list_lemmas <> a:2 var
R636:636 list_lemmas <> b:3 var
R640:643 Coq.Init.Datatypes <> true constr
R650:652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R649:649 list_lemmas <> a:2 var
R653:653 list_lemmas <> b:3 var
R862:865 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R862:865 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R1014:1025 list_lemmas <> listeqb_refl thm
R1014:1025 list_lemmas <> listeqb_refl thm
prf 1040:1046 <> eqb_app
R1063:1066 Coq.Init.Datatypes <> list ind
R1068:1068 Coq.Numbers.BinNums <> Z ind
binder 1049:1050 <> a1:4
binder 1052:1053 <> a2:5
binder 1055:1056 <> b1:6
binder 1058:1059 <> b2:7
R1097:1100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1084:1086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1074:1080 Coq.ZArith.Zcomplements <> Zlength def
R1082:1083 list_lemmas <> a1:4 var
R1087:1093 Coq.ZArith.Zcomplements <> Zlength def
R1095:1096 list_lemmas <> b1:6 var
R1139:1141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1101:1108 list_lemmas <> list_beq scheme
R1110:1110 Coq.Numbers.BinNums <> Z ind
R1112:1116 Coq.ZArith.BinInt Z eqb def
R1121:1124 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1119:1120 list_lemmas <> a1:4 var
R1125:1126 list_lemmas <> a2:5 var
R1132:1135 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1130:1131 list_lemmas <> b1:6 var
R1136:1137 list_lemmas <> b2:7 var
R1164:1167 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R1142:1149 list_lemmas <> list_beq scheme
R1151:1151 Coq.Numbers.BinNums <> Z ind
R1153:1157 Coq.ZArith.BinInt Z eqb def
R1159:1160 list_lemmas <> a1:4 var
R1162:1163 list_lemmas <> b1:6 var
R1168:1175 list_lemmas <> list_beq scheme
R1177:1177 Coq.Numbers.BinNums <> Z ind
R1179:1183 Coq.ZArith.BinInt Z eqb def
R1185:1186 list_lemmas <> a2:5 var
R1188:1189 list_lemmas <> b2:7 var
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1305:1319 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1305:1319 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1403:1417 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1403:1417 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1472:1475 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R1472:1475 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1588:1594 Coq.Init.Logic <> f_equal thm
R1596:1601 Coq.ZArith.BinInt Z pred def
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1588:1594 Coq.Init.Logic <> f_equal thm
R1596:1601 Coq.ZArith.BinInt Z pred def
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
prf 1669:1686 <> sublist_update_0th
R1690:1696 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R1717:1718 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
binder 1698:1698 <> A:8
R1705:1708 Coq.Init.Datatypes <> list ind
R1710:1710 list_lemmas <> A:8 var
binder 1702:1702 <> l:9
binder 1713:1714 <> lo:10
binder 1716:1716 <> v:11
R1738:1742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1720:1723 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1726:1728 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1724:1725 list_lemmas <> lo:10 var
R1724:1725 list_lemmas <> lo:10 var
R1729:1735 Coq.ZArith.Zcomplements <> Zlength def
R1737:1737 list_lemmas <> l:9 var
R1790:1792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1743:1750 VST.floyd.sublist <> upd_Znth def
R1789:1789 list_lemmas <> v:11 var
R1755:1769 VST.floyd.sublist <> sublist def
R1786:1786 list_lemmas <> l:9 var
R1775:1781 Coq.ZArith.Zcomplements <> Zlength def
R1783:1783 list_lemmas <> l:9 var
R1771:1772 list_lemmas <> lo:10 var
R1796:1799 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1793:1793 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1795:1795 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1794:1794 list_lemmas <> v:11 var
R1800:1814 VST.floyd.sublist <> sublist def
R1835:1835 list_lemmas <> l:9 var
R1824:1830 Coq.ZArith.Zcomplements <> Zlength def
R1832:1832 list_lemmas <> l:9 var
R1819:1819 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1817:1818 list_lemmas <> lo:10 var
