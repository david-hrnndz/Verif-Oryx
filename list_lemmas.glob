DIGEST f292b30a95546f962d633c4e85def6a6
Flist_lemmas
R281:299 VST.floyd.proofauto <> <> lib
R317:326 stdpp.list <> <> lib
R344:349 Coq.ZArith.ZArith <> <> lib
R367:385 compcert.lib.Coqlib <> <> lib
R430:433 Coq.Init.Datatypes <> list ind
prf 443:454 <> listeqb_refl
R461:464 Coq.Init.Datatypes <> list ind
R466:466 Coq.Numbers.BinNums <> Z ind
binder 457:457 <> a:1
R491:493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R471:478 list_lemmas <> list_beq scheme
R480:480 Coq.Numbers.BinNums <> Z ind
R482:486 Coq.ZArith.BinInt Z eqb def
R488:488 list_lemmas <> a:1 var
R490:490 list_lemmas <> a:1 var
R494:497 Coq.Init.Datatypes <> true constr
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
R545:554 Coq.ZArith.BinInt Z eqb_refl thm
prf 582:591 <> listeqb_eq
R595:601 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R614:616 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R608:611 Coq.Init.Datatypes <> list ind
R613:613 Coq.Numbers.BinNums <> Z ind
binder 602:602 <> a:2
R608:611 Coq.Init.Datatypes <> list ind
R613:613 Coq.Numbers.BinNums <> Z ind
binder 604:604 <> b:3
R644:648 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R637:639 Coq.Init.Logic <> ::type_scope:x_'='_x not
R617:624 list_lemmas <> list_beq scheme
R626:626 Coq.Numbers.BinNums <> Z ind
R628:632 Coq.ZArith.BinInt Z eqb def
R634:634 list_lemmas <> a:2 var
R636:636 list_lemmas <> b:3 var
R640:643 Coq.Init.Datatypes <> true constr
R650:652 Coq.Init.Logic <> ::type_scope:x_'='_x not
R649:649 list_lemmas <> a:2 var
R653:653 list_lemmas <> b:3 var
R862:865 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R862:865 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R904:911 Coq.ZArith.BinInt Z eqb_eq thm
R1014:1025 list_lemmas <> listeqb_refl thm
R1014:1025 list_lemmas <> listeqb_refl thm
prf 1040:1046 <> eqb_app
R1063:1066 Coq.Init.Datatypes <> list ind
R1068:1068 Coq.Numbers.BinNums <> Z ind
binder 1049:1050 <> a1:4
binder 1052:1053 <> a2:5
binder 1055:1056 <> b1:6
binder 1058:1059 <> b2:7
R1097:1100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1084:1086 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1074:1080 Coq.ZArith.Zcomplements <> Zlength def
R1082:1083 list_lemmas <> a1:4 var
R1087:1093 Coq.ZArith.Zcomplements <> Zlength def
R1095:1096 list_lemmas <> b1:6 var
R1139:1141 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1101:1108 list_lemmas <> list_beq scheme
R1110:1110 Coq.Numbers.BinNums <> Z ind
R1112:1116 Coq.ZArith.BinInt Z eqb def
R1121:1124 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1119:1120 list_lemmas <> a1:4 var
R1125:1126 list_lemmas <> a2:5 var
R1132:1135 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1130:1131 list_lemmas <> b1:6 var
R1136:1137 list_lemmas <> b2:7 var
R1164:1167 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R1142:1149 list_lemmas <> list_beq scheme
R1151:1151 Coq.Numbers.BinNums <> Z ind
R1153:1157 Coq.ZArith.BinInt Z eqb def
R1159:1160 list_lemmas <> a1:4 var
R1162:1163 list_lemmas <> b1:6 var
R1168:1175 list_lemmas <> list_beq scheme
R1177:1177 Coq.Numbers.BinNums <> Z ind
R1179:1183 Coq.ZArith.BinInt Z eqb def
R1185:1186 list_lemmas <> a2:5 var
R1188:1189 list_lemmas <> b2:7 var
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1262:1272 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1305:1319 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1305:1319 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1403:1417 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1379:1389 Coq.ZArith.Zcomplements <> Zlength_nil thm
R1403:1417 Coq.ZArith.Zcomplements <> Zlength_nil_inv thm
R1472:1475 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R1472:1475 Coq.ZArith.BinInt <> ::Z_scope:x_'=?'_x not
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1556:1567 Coq.ZArith.Zcomplements <> Zlength_cons thm
R1588:1594 Coq.Init.Logic <> f_equal thm
R1596:1601 Coq.ZArith.BinInt Z pred def
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1588:1594 Coq.Init.Logic <> f_equal thm
R1596:1601 Coq.ZArith.BinInt Z pred def
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
R1628:1637 Coq.ZArith.BinInt <> Zpred_succ thm
prf 1669:1686 <> sublist_update_0th
R1690:1696 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R1717:1718 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
binder 1698:1698 <> A:8
R1705:1708 Coq.Init.Datatypes <> list ind
R1710:1710 list_lemmas <> A:8 var
binder 1702:1702 <> l:9
binder 1713:1714 <> lo:10
binder 1716:1716 <> v:11
R1738:1742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1720:1723 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1726:1728 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1724:1725 list_lemmas <> lo:10 var
R1724:1725 list_lemmas <> lo:10 var
R1729:1735 Coq.ZArith.Zcomplements <> Zlength def
R1737:1737 list_lemmas <> l:9 var
R1790:1792 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1743:1750 VST.floyd.sublist <> upd_Znth def
R1789:1789 list_lemmas <> v:11 var
R1755:1769 VST.floyd.sublist <> sublist def
R1786:1786 list_lemmas <> l:9 var
R1775:1781 Coq.ZArith.Zcomplements <> Zlength def
R1783:1783 list_lemmas <> l:9 var
R1771:1772 list_lemmas <> lo:10 var
R1796:1799 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R1793:1793 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1795:1795 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R1794:1794 list_lemmas <> v:11 var
R1800:1814 VST.floyd.sublist <> sublist def
R1835:1835 list_lemmas <> l:9 var
R1824:1830 Coq.ZArith.Zcomplements <> Zlength def
R1832:1832 list_lemmas <> l:9 var
R1819:1819 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R1817:1818 list_lemmas <> lo:10 var
prf 1886:1907 <> sublist_update_0th_gen
R1911:1917 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R1941:1942 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
binder 1919:1919 <> A:12
R1926:1929 Coq.Init.Datatypes <> list ind
R1931:1931 list_lemmas <> A:12 var
binder 1923:1923 <> l:13
binder 1934:1935 <> lo:14
binder 1937:1938 <> hi:15
binder 1940:1940 <> v:16
R1955:1959 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1944:1947 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1950:1952 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R1948:1949 list_lemmas <> lo:14 var
R1948:1949 list_lemmas <> lo:14 var
R1953:1954 list_lemmas <> hi:15 var
R1975:1979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1962:1965 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R1960:1961 list_lemmas <> hi:15 var
R1966:1972 Coq.ZArith.Zcomplements <> Zlength def
R1974:1974 list_lemmas <> l:13 var
R2018:2020 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1980:1987 VST.floyd.sublist <> upd_Znth def
R2017:2017 list_lemmas <> v:16 var
R1992:2006 VST.floyd.sublist <> sublist def
R2014:2014 list_lemmas <> l:13 var
R2011:2012 list_lemmas <> hi:15 var
R2008:2009 list_lemmas <> lo:14 var
R2024:2027 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2021:2021 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R2023:2023 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R2022:2022 list_lemmas <> v:16 var
R2028:2042 VST.floyd.sublist <> sublist def
R2056:2056 list_lemmas <> l:13 var
R2052:2053 list_lemmas <> hi:15 var
R2047:2047 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2045:2046 list_lemmas <> lo:14 var
R2100:2107 VST.floyd.sublist <> upd_Znth def
R2139:2139 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2139:2139 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2185:2199 VST.floyd.sublist <> Zlength_sublist thm
R2185:2199 VST.floyd.sublist <> Zlength_sublist thm
R2185:2199 VST.floyd.sublist <> Zlength_sublist thm
R2185:2199 VST.floyd.sublist <> Zlength_sublist thm
R2185:2199 VST.floyd.sublist <> Zlength_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2224:2238 VST.floyd.sublist <> sublist_sublist thm
R2348:2350 Coq.Init.Logic <> not def
R2398:2412 VST.floyd.sublist <> Zlength_sublist thm
R2398:2412 VST.floyd.sublist <> Zlength_sublist thm
R2398:2412 VST.floyd.sublist <> Zlength_sublist thm
R2398:2412 VST.floyd.sublist <> Zlength_sublist thm
R2398:2412 VST.floyd.sublist <> Zlength_sublist thm
R2437:2446 Coq.ZArith.BinInt Z lt_0_sub thm
R2437:2446 Coq.ZArith.BinInt Z lt_0_sub thm
R2437:2446 Coq.ZArith.BinInt Z lt_0_sub thm
prf 2499:2516 <> upd_list_app_upper
R2523:2523 Coq.Numbers.BinNums <> Z ind
binder 2519:2519 <> i:17
R2535:2538 Coq.Init.Datatypes <> list ind
R2540:2542 compcert.common.Values <> val ind
binder 2527:2528 <> l1:18
binder 2530:2531 <> l2:19
R2550:2552 compcert.common.Values <> val ind
binder 2546:2546 <> x:20
R2572:2575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2567:2570 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2557:2563 Coq.ZArith.Zcomplements <> Zlength def
R2565:2566 list_lemmas <> l1:18 var
R2571:2571 list_lemmas <> i:17 var
R2599:2601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2576:2583 VST.floyd.sublist <> upd_Znth def
R2598:2598 list_lemmas <> x:20 var
R2590:2593 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2588:2589 list_lemmas <> l1:18 var
R2594:2595 list_lemmas <> l2:19 var
R2585:2585 list_lemmas <> i:17 var
R2604:2607 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R2602:2603 list_lemmas <> l1:18 var
R2609:2616 VST.floyd.sublist <> upd_Znth def
R2635:2636 list_lemmas <> l2:19 var
R2620:2621 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2632:2632 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R2619:2619 list_lemmas <> i:17 var
R2622:2628 Coq.ZArith.Zcomplements <> Zlength def
R2630:2631 list_lemmas <> l1:18 var
R2639:2639 list_lemmas <> x:20 var
prf 2684:2709 <> Znth_map_Vint_map_Int_repr
R2712:2719 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R2738:2741 stdpp.base <> ::type_scope:'forall'_x_'..'_x_','_x not
R2724:2724 Coq.Numbers.BinNums <> Z ind
binder 2720:2720 <> i:21
R2732:2735 Coq.Init.Datatypes <> list ind
R2737:2737 Coq.Numbers.BinNums <> Z ind
binder 2728:2728 <> l:22
R2760:2763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2743:2746 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2748:2750 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2747:2747 list_lemmas <> i:21 var
R2747:2747 list_lemmas <> i:21 var
R2751:2757 Coq.ZArith.Zcomplements <> Zlength def
R2759:2759 list_lemmas <> l:22 var
R2798:2800 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2764:2767 VST.floyd.sublist <> Znth def
R2772:2774 Coq.Lists.List <> map def
R2782:2784 Coq.Lists.List <> map def
R2795:2795 list_lemmas <> l:22 var
R2786:2793 compcert.lib.Integers Int repr def
R2776:2779 compcert.common.Values <> Vint constr
R2769:2769 list_lemmas <> i:21 var
R2801:2804 compcert.common.Values <> Vint constr
R2807:2814 compcert.lib.Integers Int repr def
R2817:2820 VST.floyd.sublist <> Znth def
R2824:2824 list_lemmas <> l:22 var
R2822:2822 list_lemmas <> i:21 var
